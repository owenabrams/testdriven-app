version: '3.8'

services:
  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    environment:
      - APP_SETTINGS=project.config.ProductionConfig
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@users-db:5432/users_prod
    depends_on:
      - users-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/users/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  users-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=users_prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./services/users/project/db/create.sql:/docker-entrypoint-initdb.d/create.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - users
    restart: unless-stopped

volumes:
  postgres_prod_data:
    driver: local