AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS PostgreSQL Database for TestDriven Production'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [staging, production]
    Description: Environment name
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the RDS instance will be created
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs for the DB subnet group (minimum 2)
  
  ALBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID of the Application Load Balancer
  
  DBMasterUsername:
    Type: String
    Default: webapp
    Description: Master username for the database
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  
  DBMasterPassword:
    Type: String
    NoEcho: true
    Description: Master password for the database
    MinLength: 8
    MaxLength: 128
    AllowedPattern: '[a-zA-Z0-9!@#$%^&*()_+=-]*'

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub 'testdriven-${Environment}-db-subnet-group'
      DBSubnetGroupDescription: !Sub 'Subnet group for TestDriven ${Environment} database'
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub 'testdriven-${Environment}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment

  # Security Group for RDS
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'testdriven-${Environment}-db-sg'
      GroupDescription: !Sub 'Security group for TestDriven ${Environment} database'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref ALBSecurityGroupId
          Description: PostgreSQL access from ALB security group
      Tags:
        - Key: Name
          Value: !Sub 'testdriven-${Environment}-db-sg'
        - Key: Environment
          Value: !Ref Environment

  # RDS Parameter Group
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: postgres15
      Description: !Sub 'Parameter group for TestDriven ${Environment} database'
      Parameters:
        shared_preload_libraries: pg_stat_statements
        log_statement: all
        log_min_duration_statement: 1000
      Tags:
        - Key: Name
          Value: !Sub 'testdriven-${Environment}-db-param-group'
        - Key: Environment
          Value: !Ref Environment

  # RDS Instance
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub 'testdriven-${Environment}'
      DBName: !Sub 'users_${Environment}'
      Engine: postgres
      EngineVersion: '15.4'
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp2
      StorageEncrypted: true
      
      # Network Configuration
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      PubliclyAccessible: false
      
      # Authentication
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
      
      # Backup and Maintenance
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      
      # Monitoring
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt EnhancedMonitoringRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      
      # Parameter Group
      DBParameterGroupName: !Ref DBParameterGroup
      
      # Multi-AZ (disabled for cost savings)
      MultiAZ: false
      
      # Deletion Protection (enabled for production)
      DeletionProtection: !If [IsProduction, true, false]
      
      Tags:
        - Key: Name
          Value: !Sub 'testdriven-${Environment}-db'
        - Key: Environment
          Value: !Ref Environment

  # Enhanced Monitoring Role
  EnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'testdriven-${Environment}-rds-monitoring-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Path: /

Conditions:
  IsProduction: !Equals [!Ref Environment, production]

Outputs:
  DBInstanceIdentifier:
    Description: RDS instance identifier
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::StackName}-DBInstanceIdentifier'
  
  DBEndpoint:
    Description: RDS instance endpoint
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DBEndpoint'
  
  DBPort:
    Description: RDS instance port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DBPort'
  
  DatabaseName:
    Description: Database name
    Value: !Sub 'users_${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseName'
  
  DBConnectionString:
    Description: Database connection string (without password)
    Value: !Sub 'postgresql://${DBMasterUsername}@${DBInstance.Endpoint.Address}:${DBInstance.Endpoint.Port}/users_${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-DBConnectionString'
  
  DBSecurityGroupId:
    Description: Security Group ID for the database
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-DBSecurityGroupId'
