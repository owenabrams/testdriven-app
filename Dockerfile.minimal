# Minimal Dockerfile for faster uploads
FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=project/__init__.py
ENV FLASK_ENV=production
ENV APP_SETTINGS=project.config.ProductionConfig
ENV DATABASE_URL=sqlite:///app.db

# Install only essential system dependencies
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy and install Python dependencies
COPY services/users/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy only essential backend files
COPY services/users/ ./services/users/

# Create static directory
RUN mkdir -p ./services/users/project/static

# Set working directory
WORKDIR /app/services/users

# Create startup script
RUN echo '#!/bin/bash\n\
echo "ðŸš€ Starting Minimal Savings Groups Platform..."\n\
python manage.py recreate_db || echo "DB exists"\n\
python manage.py seed_db || echo "DB seeded"\n\
echo "âœ… Starting Flask server..."\n\
exec python manage.py run --host=0.0.0.0' > start.sh && chmod +x start.sh

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/ping || exit 1

# Start application
CMD ["./start.sh"]